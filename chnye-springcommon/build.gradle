

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

  //JVM版本
  sourceCompatibility = 1.7
  targetCompatibility = 1.7

   //编码
  [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

ext {
    junitVersion = '4.11'
    
    springVersion = '4.1.7.RELEASE'
    
    slf4jVersion = '1.7.12'
    logbackVersion = '1.1.2'
    
    commondbcpVersion = '1.4'
    mybatisVersion = '3.3.0'
    mysqlVersion = '5.1.29'
    
    lang3Version = '3.3.2'
    guavaVersion = '18.0'
    commonsIOVersion = '2.4'
    
    dom4jVersion = '1.6.1'
    jaxenVersion = '1.1.6'
    jdomVersion = '1.1'
    
    jacksonVersion = '2.8.1'
    gsonVersion = '2.7'
}


repositories {
    mavenLocal()
    mavenCentral()
}


jar {
  	manifest {
  	  attributes("Implementation-Title": "$project.name",
  	      "Implementation-Version": "$version",
  	      "Implementation-Vendor": "CHNYE",
  	      "Built-By":"Bolon Zhang",
  	      "Buiilt-Date": new Date().getDateTimeString(),
  	      "Built-With": "gradle-${project.getGradle().getGradleVersion()}, groovy-${GroovySystem.getVersion()}",
          "Created-By": 'Java ' + System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')'
  	  )
  	}
}

//通用依赖
dependencies {
  	compile(

  		"org.slf4j:slf4j-api:$slf4jVersion",
  		"ch.qos.logback:logback-core:$logbackVersion",
  		"ch.qos.logback:logback-classic:$logbackVersion",
  		"org.logback-extensions:logback-ext-spring:0.1.2",
  		"org.slf4j:jcl-over-slf4j:$slf4jVersion",
  		
  		"org.apache.commons:commons-lang3:$lang3Version",
  		"commons-io:commons-io:$commonsIOVersion",
  		"com.google.guava:guava:$guavaVersion",
  		

		"dom4j:dom4j:$dom4jVersion",
		"jaxen:jaxen:$jaxenVersion",
		"org.jdom:jdom:$jdomVersion",

		"com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
		"com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
		"com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
		"com.google.code.gson:gson:$gsonVersion",
		
		"org.springframework:spring-context:$springVersion",
  		"org.springframework:spring-core:$springVersion",
  		"org.springframework:spring-beans:$springVersion",
		"org.springframework.integration:spring-integration-core:$springVersion"  		


  	)

  	// 依赖mave中不存在的jar
    ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
    ext.rootProjectLibs = new File(rootProject.rootDir, 'thirdparty').getAbsolutePath()
    ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')
    compile jarTree

    // 测试依赖
    testCompile(
        "org.springframework:spring-test:$springVersion",
        "junit:junit:$junitVersion"
    )
}


// 显示当前项目下所有用于 compile 的 jar.
task listJars(description: 'Display all compile jars.') << {
    configurations.compile.each { File file -> println file.name }
}

task mkSrcDirs <<{
    println "mkSrcDirs $project.name"
    sourceSets.each {
      println "<---mkdir:"+it+"--->"
      it.java.srcDirs.each {
	     it.mkdirs()
      }
      it.resources.srcDirs.each {
	     it.mkdirs()
      }
   }
}


jar {
    baseName = 'chnye-springcommon'
    version =  '0.1.0'
}



task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
